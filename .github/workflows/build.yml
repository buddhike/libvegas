name: Build libvegas

on:
  # Runs on pushes targeting the default branch
  push:
    branches:
      - main
  release:
    types: [created]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

jobs:
  build-linux:
    runs-on: ubuntu-latest
    steps:
      - name: Set up Go 1.x
        uses: actions/setup-go@v4
        with:
          go-version: ^1.22
        id: go

      - name: Setup ARM cross compiler
        run: |
          sudo apt-get update
          sudo apt-get install gcc-arm-none-eabi -y
          sudo apt-get install gcc-arm-linux-gnueabihf -y
          sudo apt-get install gcc-aarch64-linux-gnu -y

      - name: Checkout repository
        uses: actions/checkout@v4

      - name: go build
        working-directory: src
        run: |
          make clean
          GOARCH=amd64 make build 
          CC=aarch64-linux-gnu-gcc GOARCH=arm64 make build

      - name: Archive production artifacts
        uses: actions/upload-artifact@v4
        with:
          name: libs-linux
          path: |
            src/build/*.so

  build-osx:
    runs-on: macos-latest
    steps:
      - name: Set up Go 1.x
        uses: actions/setup-go@v4
        with:
          go-version: ^1.22
        id: go

      - name: Checkout repository
        uses: actions/checkout@v4

      - name: go build
        working-directory: src
        run: |
          GOARCH=amd64 make build 
          GOARCH=arm64 make build 

      - name: Archive production artifacts
        uses: actions/upload-artifact@v4
        with:
          name: libs-osx
          path: |
            src/build/*.so

  build-python:
    runs-on: ubuntu-latest
    needs: [build-linux, build-osx]
    permissions:
      id-token: write
    steps:
      - name: Setup python
        uses: actions/setup-python@v5 
        with:
          python-version: '3.10'

      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Download libs-linux
        uses: actions/download-artifact@v4
        with:
          name: libs-linux
        
      - name: Download libs-osx
        uses: actions/download-artifact@v4
        with:
          name: libs-osx

      - name: Publish python wheel
        if: github.event_name == 'release'
        env: 
          PYPI_TOKEN: ${{ secrets.PYPI_TOKEN }}
          LIBVEGAS_VERSION: ${{ github.ref }}
        run: |
          mkdir lang/python/src/libvegas/libs
          mv *.so lang/python/src/libvegas/libs/
          pip install poetry
          cd lang/python
          sed 's/version = "[0-9]*\.[0-9]*\.[0-9]*"/version = "${LIBVEGAS_VERSION}"/g' pyproject.toml > pyproject-next.toml
          mv pyproject-next.toml pyproject.toml 
          poetry config pypi-token.pypi $PYPI_TOKEN
          poetry publish --build
